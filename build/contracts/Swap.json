{
  "contractName": "Swap",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_Gold",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_Silver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_ratioEthToGold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ratioEthToSilver",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_type",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "EthToTokenSwapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SwapDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newRatioEthToGold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newRatioEthToSilver",
          "type": "uint256"
        }
      ],
      "name": "TokenRatioChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_type",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TokenToEthAndTokenToTokenSwapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ratioEthToGold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ratioEthToSilver",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_type",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapEthFor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_type",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "swapTokenFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newRatioEthToGold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newRatioEthToSilver",
          "type": "uint256"
        }
      ],
      "name": "changeTokenRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_Gold\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_Silver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ratioEthToGold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ratioEthToSilver\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_type\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"EthToTokenSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SwapDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newRatioEthToGold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newRatioEthToSilver\",\"type\":\"uint256\"}],\"name\":\"TokenRatioChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_type\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenToEthAndTokenToTokenSwapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRatioEthToGold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newRatioEthToSilver\",\"type\":\"uint256\"}],\"name\":\"changeTokenRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratioEthToGold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratioEthToSilver\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_type\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapEthFor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_type\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokenFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeTokenRatio(uint256,uint256)\":{\"details\":\"External function to set token ratios. This function can be called by only owner.\",\"params\":{\"_newRatioEthToGold\":\"New Eth to gold token ratio\",\"_newRatioEthToSilver\":\"New Eth to silver token ratio\"}},\"constructor\":{\"details\":\"Constructor function\",\"params\":{\"_Gold\":\"Interface of Gold token\",\"_Silver\":\"Interface of Silver token\",\"_ratioEthToGold\":\"Ratio between ETH and Gold\",\"_ratioEthToSilver\":\"Ratio between ETH and Silver\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swapEthFor(bytes32,uint256)\":{\"details\":\"Payable function to swap ETH to token\",\"params\":{\"_amount\":\"Token amount\",\"_type\":\"Token type which should be swapped\"}},\"swapTokenFor(bytes32,uint256)\":{\"details\":\"External function to swap token to ETH and token to token\",\"params\":{\"_amount\":\"Token Amount\",\"_type\":\"Token type which should be swapped\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"EthToTokenSwapped(bytes32,uint256)\":{\"notice\":\"Event emitted when ETH to token swap finished.\"},\"SwapDeployed()\":{\"notice\":\"Event emitted only on construction.\"},\"TokenRatioChanged(uint256,uint256)\":{\"notice\":\"Event emitted when ETH to token ratio changed.\"},\"TokenToEthAndTokenToTokenSwapped(bytes32,uint256)\":{\"notice\":\"Event emitted when token to token or token to ETH swap finished.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Swap.sol\":\"Swap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/Swap.sol\":{\"keccak256\":\"0x57613c29e361062cc9c4171c5cfa659103f89100fbb83c8c2890ebfa4d816dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c792fcbf16cd61fac7ac07a04346a3df453d820d4133f902325e54c6a21f47c2\",\"dweb:/ipfs/QmTiAWEs4xa7XZ2U7uKkYRzzwDmzCYjmGsKW9mPJvGJUxZ\"]}},\"version\":1}",
  "bytecode": "0x60806040527fd1c7ca706a8e8b2bf28ed38043a077f5ca6a5a4397ada8d6b54e84d780e6caf86005557f11eb4b32f1fa735086fbe87e478059bb3a657a0ff464ffb9b901e483f181b2d96006557f59287ce8f9c3e0bb5cf1ecf8706e85c420e21886f47d6207b9d8b63a24116df56007557fa5cf0fa029b1efe51cd3198bd544c312bb51c63214eba2e77809b85d97d595d96008557fdbdda48e7d956aef5a29ae0f4f1da17a651ad4ea992658a18426de77665f52f06009557fd96672f10fae8cbf655f1fa056e98e8e2076e311e88ceabc485f8c30468a67af600a55348015620000e957600080fd5b50604051620017333803806200173383398181016040528101906200010f9190620002ef565b6200012f62000123620001f560201b60201c565b620001fd60201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600381905550806004819055507f124e5435d046a7d20714edc1d1e1d01a6252708be1b1e02c232196311db2d10f60405160405180910390a150505050620003e1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620002d281620003ad565b92915050565b600081519050620002e981620003c7565b92915050565b600080600080608085870312156200030657600080fd5b60006200031687828801620002c1565b94505060206200032987828801620002c1565b93505060406200033c87828801620002d8565b92505060606200034f87828801620002d8565b91505092959194509250565b6000620003688262000383565b9050919050565b60006200037c826200035b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620003b8816200036f565b8114620003c457600080fd5b50565b620003d281620003a3565b8114620003de57600080fd5b50565b61134280620003f16000396000f3fe60806040526004361061007f5760003560e01c80638ac5f8071161004e5780638ac5f8071461011f5780638da5cb5b1461014a578063df32dac714610175578063f2fde38b1461019157610086565b806301f896651461008b57806362cb6e72146100b4578063715018a6146100df57806386956e23146100f657610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610db5565b6101ba565b005b3480156100c057600080fd5b506100c9610776565b6040516100d6919061100a565b60405180910390f35b3480156100eb57600080fd5b506100f461077c565b005b34801561010257600080fd5b5061011d60048036038101906101189190610df1565b610804565b005b34801561012b57600080fd5b506101346108cb565b604051610141919061100a565b60405180910390f35b34801561015657600080fd5b5061015f6108d1565b60405161016c9190610ee6565b60405180910390f35b61018f600480360381019061018a9190610db5565b6108fa565b005b34801561019d57600080fd5b506101b860048036038101906101b39190610d63565b610b4b565b005b6007548214156102cf57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161022393929190610f01565b602060405180830381600087803b15801561023d57600080fd5b505af1158015610251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102759190610d8c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc6003548361029e9190611090565b9081150290604051600060405180830381858888f193505050501580156102c9573d6000803e3d6000fd5b50610739565b6008548214156103e457600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161033893929190610f01565b602060405180830381600087803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190610d8c565b503373ffffffffffffffffffffffffffffffffffffffff166108fc600454836103b39190611090565b9081150290604051600060405180830381858888f193505050501580156103de573d6000803e3d6000fd5b50610738565b600a5482141561058f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161044d93929190610f01565b602060405180830381600087803b15801561046757600080fd5b505af115801561047b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049f9190610d8c565b5060006003546103e86004546104b59190611090565b6104bf919061105f565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336103e8848661050f9190611090565b610519919061105f565b6040518363ffffffff1660e01b8152600401610536929190610f38565b602060405180830381600087803b15801561055057600080fd5b505af1158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610d8c565b5050610737565b60095482141561073657600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105f893929190610f01565b602060405180830381600087803b15801561061257600080fd5b505af1158015610626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064a9190610d8c565b5060006004546103e86003546106609190611090565b61066a919061105f565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336103e884866106ba9190611090565b6106c4919061105f565b6040518363ffffffff1660e01b81526004016106e1929190610f38565b602060405180830381600087803b1580156106fb57600080fd5b505af115801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190610d8c565b50505b5b5b5b7fe822f3c183f2279f61cc63f550e7820f723bd4fd4724ec6617c44a7c1a2b4551828260405161076a929190610f61565b60405180910390a15050565b60035481565b610784610c43565b73ffffffffffffffffffffffffffffffffffffffff166107a26108d1565b73ffffffffffffffffffffffffffffffffffffffff16146107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90610fca565b60405180910390fd5b6108026000610c4b565b565b61080c610c43565b73ffffffffffffffffffffffffffffffffffffffff1661082a6108d1565b73ffffffffffffffffffffffffffffffffffffffff1614610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087790610fca565b60405180910390fd5b81600381905550806004819055507fcf8ba313922618e7da22357ffa0045c136a48272d470cc9eea704dd5f198d3ed82826040516108bf929190611025565b60405180910390a15050565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600554821415610a045734816003546109139190611090565b14610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a90610fea565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109b0929190610f38565b602060405180830381600087803b1580156109ca57600080fd5b505af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a029190610d8c565b505b600654821415610b0e573481600454610a1d9190611090565b14610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490610faa565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610aba929190610f38565b602060405180830381600087803b158015610ad457600080fd5b505af1158015610ae8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0c9190610d8c565b505b7f9713e765544d3b14c292ebcbd41ad7111559b65d3206c6d3071ba32bc794c1978282604051610b3f929190610f61565b60405180910390a15050565b610b53610c43565b73ffffffffffffffffffffffffffffffffffffffff16610b716108d1565b73ffffffffffffffffffffffffffffffffffffffff1614610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe90610fca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2e90610f8a565b60405180910390fd5b610c4081610c4b565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d1e816112b0565b92915050565b600081519050610d33816112c7565b92915050565b600081359050610d48816112de565b92915050565b600081359050610d5d816112f5565b92915050565b600060208284031215610d7557600080fd5b6000610d8384828501610d0f565b91505092915050565b600060208284031215610d9e57600080fd5b6000610dac84828501610d24565b91505092915050565b60008060408385031215610dc857600080fd5b6000610dd685828601610d39565b9250506020610de785828601610d4e565b9150509250929050565b60008060408385031215610e0457600080fd5b6000610e1285828601610d4e565b9250506020610e2385828601610d4e565b9150509250929050565b610e36816110ea565b82525050565b610e4581611108565b82525050565b6000610e5860268361104e565b9150610e638261119a565b604082019050919050565b6000610e7b603a8361104e565b9150610e86826111e9565b604082019050919050565b6000610e9e60208361104e565b9150610ea982611238565b602082019050919050565b6000610ec160388361104e565b9150610ecc82611261565b604082019050919050565b610ee081611132565b82525050565b6000602082019050610efb6000830184610e2d565b92915050565b6000606082019050610f166000830186610e2d565b610f236020830185610e2d565b610f306040830184610ed7565b949350505050565b6000604082019050610f4d6000830185610e2d565b610f5a6020830184610ed7565b9392505050565b6000604082019050610f766000830185610e3c565b610f836020830184610ed7565b9392505050565b60006020820190508181036000830152610fa381610e4b565b9050919050565b60006020820190508181036000830152610fc381610e6e565b9050919050565b60006020820190508181036000830152610fe381610e91565b9050919050565b6000602082019050818103600083015261100381610eb4565b9050919050565b600060208201905061101f6000830184610ed7565b92915050565b600060408201905061103a6000830185610ed7565b6110476020830184610ed7565b9392505050565b600082825260208201905092915050565b600061106a82611132565b915061107583611132565b9250826110855761108461116b565b5b828204905092915050565b600061109b82611132565b91506110a683611132565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110df576110de61113c565b5b828202905092915050565b60006110f582611112565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f537761703a2043616c6c6572206861736e277420676f7420656e6f756768204560008201527f544820666f7220627579696e672053696c76657220746f6b656e000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f537761703a2043616c6c6572206861736e277420676f7420656e6f756768204560008201527f544820666f7220627579696e6720476f6c6420746f6b656e0000000000000000602082015250565b6112b9816110ea565b81146112c457600080fd5b50565b6112d0816110fc565b81146112db57600080fd5b50565b6112e781611108565b81146112f257600080fd5b50565b6112fe81611132565b811461130957600080fd5b5056fea26469706673582212202150bf53396c630939611d7e69fe56466e6a8821249cbf86eaafe8aeb3df8ddb64736f6c63430008040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1862:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:94:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "94:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "109:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "103:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "103:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "94:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "166:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$727",
                      "nodeType": "YulIdentifier",
                      "src": "125:40:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "125:47:10"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$727_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "62:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "70:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "78:5:10",
                "type": ""
              }
            ],
            "src": "7:171:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "247:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "257:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "272:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "266:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "266:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "257:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "315:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "288:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "288:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "225:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "233:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "241:5:10",
                "type": ""
              }
            ],
            "src": "184:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "489:653:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "536:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "545:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "548:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "538:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "538:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "538:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "510:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "519:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "531:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "499:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "562:142:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "577:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "591:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "581:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "606:88:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "666:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "677:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "662:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "662:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "686:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$727_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "616:45:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "616:78:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "606:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "714:143:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "729:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "743:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "733:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "759:88:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "819:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "830:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "815:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "815:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "839:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$727_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "769:45:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:78:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "759:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "867:129:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "882:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "896:2:10",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "886:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "912:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "958:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "969:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "954:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "954:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "978:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "922:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "922:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "912:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1006:129:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1021:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1035:2:10",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1025:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1051:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1097:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1108:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1093:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1093:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1117:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1061:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1051:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$727t_contract$_IERC20_$727t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "446:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "458:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "466:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "474:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "482:6:10",
                "type": ""
              }
            ],
            "src": "333:809:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1203:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1232:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1214:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1203:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1175:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1185:7:10",
                "type": ""
              }
            ],
            "src": "1148:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1309:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1319:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1348:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1330:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1330:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1319:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$727",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1291:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1301:7:10",
                "type": ""
              }
            ],
            "src": "1250:110:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1411:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1421:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1436:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1443:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1432:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1421:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1393:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1403:7:10",
                "type": ""
              }
            ],
            "src": "1366:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1564:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1553:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1525:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1535:7:10",
                "type": ""
              }
            ],
            "src": "1498:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1638:93:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1709:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1718:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1721:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1711:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1711:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1711:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1661:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1700:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$727",
                              "nodeType": "YulIdentifier",
                              "src": "1668:31:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1668:38:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1658:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1658:49:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1651:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1651:57:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1648:2:10"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$727",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1631:5:10",
                "type": ""
              }
            ],
            "src": "1581:150:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1780:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1837:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1846:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1849:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1839:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1839:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1839:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1803:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1828:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1810:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1810:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1800:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1800:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1793:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1793:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1790:2:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1773:5:10",
                "type": ""
              }
            ],
            "src": "1737:122:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_IERC20_$727_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$727(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$727t_contract$_IERC20_$727t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$727_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$727_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$727(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_contract$_IERC20_$727(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$727(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10451:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "7:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:10",
                "type": ""
              }
            ],
            "src": "152:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "366:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "357:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "395:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "395:33:10"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "325:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "333:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "341:5:10",
                "type": ""
              }
            ],
            "src": "295:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "492:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "502:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "524:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "511:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "511:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "502:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "567:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "540:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "540:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "540:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "470:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "478:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "486:5:10",
                "type": ""
              }
            ],
            "src": "440:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "651:196:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "697:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "709:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "699:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "699:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "699:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "672:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "681:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "668:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "693:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "664:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "661:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "723:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "738:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "742:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "767:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "802:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "813:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "798:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "798:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "822:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "777:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "767:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "621:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "632:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "644:6:10",
                "type": ""
              }
            ],
            "src": "585:262:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "927:204:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "948:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "957:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "944:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "944:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "969:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "940:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "940:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "937:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "999:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1014:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1028:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1018:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1043:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1086:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1097:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1082:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1082:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1106:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1053:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1053:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1043:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "897:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "908:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "920:6:10",
                "type": ""
              }
            ],
            "src": "853:278:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1220:324:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1266:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1275:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1278:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1268:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1268:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1241:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1250:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1237:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1237:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1262:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1233:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1233:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1230:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1292:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1307:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1321:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1311:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1336:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1371:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1382:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1367:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1367:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1391:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1346:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1336:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1464:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1499:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1510:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1495:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1495:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1519:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1474:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1474:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1464:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1182:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1193:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1205:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1213:6:10",
                "type": ""
              }
            ],
            "src": "1137:407:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1633:324:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1679:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1688:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1691:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1681:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1681:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1681:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1654:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1663:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1646:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1646:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1643:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1705:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1720:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1734:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1724:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1749:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1784:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1795:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1780:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1780:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1804:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1759:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1749:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1832:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1847:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1861:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1851:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1877:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1912:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1923:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1908:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1908:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1932:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1887:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1887:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1877:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1595:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1606:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1618:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1626:6:10",
                "type": ""
              }
            ],
            "src": "1550:407:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2028:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2045:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2068:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2050:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2050:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2038:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2038:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2038:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2016:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2023:3:10",
                "type": ""
              }
            ],
            "src": "1963:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2152:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2169:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2192:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2174:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2162:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2162:37:10"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2140:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2147:3:10",
                "type": ""
              }
            ],
            "src": "2087:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2367:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2433:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2438:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2374:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2374:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2367:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2539:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "2450:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2450:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2450:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2552:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2563:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2559:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2559:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2552:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2345:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2353:3:10",
                "type": ""
              }
            ],
            "src": "2211:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2729:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2739:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2805:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2810:2:10",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2746:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2739:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2911:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506",
                      "nodeType": "YulIdentifier",
                      "src": "2822:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2822:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2924:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2935:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2940:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2931:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2931:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2924:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2717:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2725:3:10",
                "type": ""
              }
            ],
            "src": "2583:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3101:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3111:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3177:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3182:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3118:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3118:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3111:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3283:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "3194:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3194:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3194:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3296:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3307:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3312:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3303:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3303:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3296:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3089:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3097:3:10",
                "type": ""
              }
            ],
            "src": "2955:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3473:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3483:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3549:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3554:2:10",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3490:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3490:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3483:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3655:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3",
                      "nodeType": "YulIdentifier",
                      "src": "3566:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3566:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3566:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3668:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3679:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3684:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3675:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3675:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3668:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3461:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3469:3:10",
                "type": ""
              }
            ],
            "src": "3327:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3764:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3781:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3804:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3786:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3786:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3774:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3774:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3774:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3752:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3759:3:10",
                "type": ""
              }
            ],
            "src": "3699:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3921:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3931:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3943:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3954:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3939:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3939:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3931:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4011:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4024:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4035:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4020:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4020:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3967:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3967:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3967:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3893:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3905:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3916:4:10",
                "type": ""
              }
            ],
            "src": "3823:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4205:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4215:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4227:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4238:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4223:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4223:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4215:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4295:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4308:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4319:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4304:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4304:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4251:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4251:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4251:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4376:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4389:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4400:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4385:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4385:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4332:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4332:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4332:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4458:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4471:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4482:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4467:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4467:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4414:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4414:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4414:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4161:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4173:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4181:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4189:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4200:4:10",
                "type": ""
              }
            ],
            "src": "4051:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4625:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4635:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4647:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4658:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4643:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4643:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4635:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4715:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4728:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4739:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4724:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4724:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4671:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4671:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4671:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4796:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4809:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4820:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4805:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4805:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4752:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4752:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4752:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4601:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4609:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4620:4:10",
                "type": ""
              }
            ],
            "src": "4499:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4963:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4973:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4985:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4996:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4981:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4981:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4973:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5053:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5066:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5077:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5062:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5062:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5009:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5009:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5009:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5134:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5147:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5158:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5143:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5143:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5090:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5090:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5090:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4927:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4939:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4947:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4958:4:10",
                "type": ""
              }
            ],
            "src": "4837:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5346:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5356:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5368:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5379:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5364:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5364:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5356:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5403:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5414:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5399:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5399:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5422:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5428:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5418:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5418:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5392:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5392:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5392:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5448:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5582:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5456:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5456:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5448:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5326:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5341:4:10",
                "type": ""
              }
            ],
            "src": "5175:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5771:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5781:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5793:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5804:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5789:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5789:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5781:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5828:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5839:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5824:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5824:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5847:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5853:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5843:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5843:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5817:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5817:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5817:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5873:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6007:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5881:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5881:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5873:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5751:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5766:4:10",
                "type": ""
              }
            ],
            "src": "5600:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6196:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6206:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6218:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6229:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6214:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6214:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6206:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6253:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6264:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6249:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6249:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6272:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6278:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6268:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6268:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6242:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6242:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6242:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6298:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6432:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6306:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6306:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6298:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6176:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6191:4:10",
                "type": ""
              }
            ],
            "src": "6025:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6621:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6631:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6643:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6654:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6639:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6639:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6631:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6678:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6689:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6674:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6674:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6697:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6703:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6693:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6693:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6667:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6667:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6667:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6723:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6857:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6731:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6723:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6601:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6616:4:10",
                "type": ""
              }
            ],
            "src": "6450:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6973:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6983:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6995:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7006:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6991:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6991:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6983:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7063:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7076:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7087:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7072:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7072:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7019:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7019:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7019:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6945:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6957:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6968:4:10",
                "type": ""
              }
            ],
            "src": "6875:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7229:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7239:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7251:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7262:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7247:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7247:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7239:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7319:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7332:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7343:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7328:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7328:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7275:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7275:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7275:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7400:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7413:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7424:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7409:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7409:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7356:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7356:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7356:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7193:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7205:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7213:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7224:4:10",
                "type": ""
              }
            ],
            "src": "7103:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7537:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7554:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7559:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7547:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7547:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7547:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7575:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7594:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7599:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7590:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7590:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "7575:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7509:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7514:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "7525:11:10",
                "type": ""
              }
            ],
            "src": "7441:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7658:143:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7668:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7691:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7673:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7673:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7668:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7702:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7725:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7707:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7707:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7702:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7749:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "7751:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7751:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7751:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7746:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7739:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7739:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7736:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7781:14:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7790:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7793:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7786:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7786:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7781:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7647:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7650:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7656:1:10",
                "type": ""
              }
            ],
            "src": "7616:185:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7855:300:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7865:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7888:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7870:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7870:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7865:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7899:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7922:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7904:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7904:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7899:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8097:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8099:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8099:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8099:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8009:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8002:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8002:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7995:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7995:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8017:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8024:66:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8092:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8020:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8020:74:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8014:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8014:81:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7991:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7991:105:10"
                  },
                  "nodeType": "YulIf",
                  "src": "7988:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8129:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8144:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8147:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8140:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8140:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8129:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7838:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7841:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7847:7:10",
                "type": ""
              }
            ],
            "src": "7807:348:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8206:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8216:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8245:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8227:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8227:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8216:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8188:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8198:7:10",
                "type": ""
              }
            ],
            "src": "8161:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8305:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8315:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8340:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8333:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8333:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8326:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8326:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8315:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8287:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8297:7:10",
                "type": ""
              }
            ],
            "src": "8263:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8404:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8414:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8425:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8414:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8386:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8396:7:10",
                "type": ""
              }
            ],
            "src": "8359:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8487:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8497:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8512:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8519:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8508:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8508:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8497:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8469:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8479:7:10",
                "type": ""
              }
            ],
            "src": "8442:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8619:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8629:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8640:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8629:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8601:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8611:7:10",
                "type": ""
              }
            ],
            "src": "8574:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8685:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8702:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8705:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8695:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8695:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8695:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8799:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8802:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8792:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8792:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8792:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8823:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8826:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8816:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8816:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8816:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8657:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8871:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8888:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8891:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8881:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8881:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8881:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8985:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8988:4:10",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8978:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8978:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8978:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9009:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9012:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9002:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9002:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9002:15:10"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "8843:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9135:119:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9157:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9165:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9153:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9153:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9169:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9146:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9146:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9146:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9225:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9233:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9221:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9221:15:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9238:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9214:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9214:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9214:33:10"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9127:6:10",
                "type": ""
              }
            ],
            "src": "9029:225:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9366:139:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9388:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9396:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9384:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9384:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9400:34:10",
                        "type": "",
                        "value": "Swap: Caller hasn't got enough E"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9377:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9377:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9377:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9456:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9464:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9452:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9452:15:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9469:28:10",
                        "type": "",
                        "value": "TH for buying Silver token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9445:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9445:53:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9445:53:10"
                }
              ]
            },
            "name": "store_literal_in_memory_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9358:6:10",
                "type": ""
              }
            ],
            "src": "9260:245:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9617:76:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9639:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9647:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9635:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9635:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9651:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9628:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9628:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9628:58:10"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9609:6:10",
                "type": ""
              }
            ],
            "src": "9511:182:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9805:137:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9827:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9835:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9823:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9823:14:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9839:34:10",
                        "type": "",
                        "value": "Swap: Caller hasn't got enough E"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9816:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9816:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9895:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9903:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9891:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9891:15:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9908:26:10",
                        "type": "",
                        "value": "TH for buying Gold token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9884:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9884:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9884:51:10"
                }
              ]
            },
            "name": "store_literal_in_memory_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9797:6:10",
                "type": ""
              }
            ],
            "src": "9699:243:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9991:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10048:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10057:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10060:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10050:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10050:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10050:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10014:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10039:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10021:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10021:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10011:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10011:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10004:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10004:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10001:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9984:5:10",
                "type": ""
              }
            ],
            "src": "9948:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10116:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10170:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10179:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10182:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10172:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10172:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10172:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10139:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10161:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10146:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10146:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10136:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10136:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10129:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10129:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10126:2:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10109:5:10",
                "type": ""
              }
            ],
            "src": "10076:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10241:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10298:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10307:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10310:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10300:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10300:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10300:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10264:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10289:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "10271:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10271:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10261:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10261:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10254:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10254:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10251:2:10"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10234:5:10",
                "type": ""
              }
            ],
            "src": "10198:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10369:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10426:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10435:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10438:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10428:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10428:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10428:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10392:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10417:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10399:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10399:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10389:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10389:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10382:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10382:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10379:2:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10362:5:10",
                "type": ""
              }
            ],
            "src": "10326:122:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506(memPtr) {\n\n        mstore(add(memPtr, 0), \"Swap: Caller hasn't got enough E\")\n\n        mstore(add(memPtr, 32), \"TH for buying Silver token\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Swap: Caller hasn't got enough E\")\n\n        mstore(add(memPtr, 32), \"TH for buying Gold token\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "226:4348:9:-:0;;;428:28;400:56;;492:30;462:60;;557:28;529:56;;621:30;591:60;;688:31;657:62;;756:31;725:62;;1588:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;1737:5:9;1730:4;;:12;;;;;;;;;;;;;;;;;;1761:7;1752:6;;:16;;;;;;;;;;;;;;;;;;1795:15;1778:14;:32;;;;1839:17;1820:16;:36;;;;1872:14;;;;;;;;;;1588:305;;;;226:4348;;586:96:4;639:7;665:10;658:17;;586:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:171:10:-;78:5;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;84:94;;;;:::o;184:143::-;241:5;272:6;266:13;257:22;;288:33;315:5;288:33;:::i;:::-;247:80;;;;:::o;333:809::-;458:6;466;474;482;531:3;519:9;510:7;506:23;502:33;499:2;;;548:1;545;538:12;499:2;591:1;616:78;686:7;677:6;666:9;662:22;616:78;:::i;:::-;606:88;;562:142;743:2;769:78;839:7;830:6;819:9;815:22;769:78;:::i;:::-;759:88;;714:143;896:2;922:64;978:7;969:6;958:9;954:22;922:64;:::i;:::-;912:74;;867:129;1035:2;1061:64;1117:7;1108:6;1097:9;1093:22;1061:64;:::i;:::-;1051:74;;1006:129;489:653;;;;;;;:::o;1148:96::-;1185:7;1214:24;1232:5;1214:24;:::i;:::-;1203:35;;1193:51;;;:::o;1250:110::-;1301:7;1330:24;1348:5;1330:24;:::i;:::-;1319:35;;1309:51;;;:::o;1366:126::-;1403:7;1443:42;1436:5;1432:54;1421:65;;1411:81;;;:::o;1498:77::-;1535:7;1564:5;1553:16;;1543:32;;;:::o;1581:150::-;1668:38;1700:5;1668:38;:::i;:::-;1661:5;1658:49;1648:2;;1721:1;1718;1711:12;1648:2;1638:93;:::o;1737:122::-;1810:24;1828:5;1810:24;:::i;:::-;1803:5;1800:35;1790:2;;1849:1;1846;1839:12;1790:2;1780:79;:::o;226:4348:9:-;;;;;;;",
  "deployedSourceMap": "226:4348:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2886:1108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;327:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;;;;;;;;;;;:::i;:::-;;4236:301:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;362:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:649:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1846:189:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2886:1108:9;2972:9;;2963:5;:18;2959:965;;;2997:4;;;;;;;;;;;:17;;;3015:10;3035:4;3042:7;2997:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3072:10;3064:28;;:54;3103:14;;3093:7;:24;;;;:::i;:::-;3064:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2959:965;;;3148:11;;3139:5;:20;3135:789;;;3175:6;;;;;;;;;;;:19;;;3195:10;3215:4;3222:7;3175:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3252:10;3244:28;;:56;3283:16;;3273:7;:26;;;;:::i;:::-;3244:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3135:789;;;3330:12;;3321:5;:21;3317:607;;;3358:4;;;;;;;;;;;:17;;;3376:10;3396:4;3403:7;3358:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3426:20;3475:14;;3468:4;3449:16;;:23;;;;:::i;:::-;:40;;;;:::i;:::-;3426:63;;3503:6;;;;;;;;;;;:15;;;3536:10;3589:4;3574:12;3564:7;:22;;;;:::i;:::-;:29;;;;:::i;:::-;3503:104;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3317:607;;;;3637:12;;3628:5;:21;3624:300;;;3665:6;;;;;;;;;;;:19;;;3685:10;3705:4;3712:7;3665:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3734:20;3781:16;;3774:4;3757:14;;:21;;;;:::i;:::-;:40;;;;:::i;:::-;3734:63;;3811:4;;;;;;;;;;;:13;;;3842:10;3895:4;3880:12;3870:7;:22;;;;:::i;:::-;:29;;;;:::i;:::-;3811:102;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3624:300;;3317:607;3135:789;2959:965;3939:48;3972:5;3979:7;3939:48;;;;;;;:::i;:::-;;;;;;;;2886:1108;;:::o;327:29::-;;;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;4236:301:9:-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4388:18:9::1;4371:14;:35;;;;4435:20;4416:16;:39;;;;4471:59;4489:18;4509:20;4471:59;;;;;;;:::i;:::-;;;;;;;;4236:301:::0;;:::o;362:31::-;;;;:::o;973:85:0:-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;2055:649:9:-;2147:9;;2138:5;:18;2134:249;;;2225:9;2214:7;2197:14;;:24;;;;:::i;:::-;:37;2172:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;2338:4;;;;;;;;;;;:13;;;2352:10;2364:7;2338:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2134:249;2405:11;;2396:5;:20;2392:257;;;2487:9;2476:7;2457:16;;:26;;;;:::i;:::-;:39;2432:156;;;;;;;;;;;;:::i;:::-;;;;;;;;;2602:6;;;;;;;;;;;:15;;;2618:10;2630:7;2602:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2392:257;2664:33;2682:5;2689:7;2664:33;;;;;;;:::i;:::-;;;;;;;;2055:649;;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;586:96:4:-;639:7;665:10;658:17;;586:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2041:169;;:::o;7:139:10:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:139::-;486:5;524:6;511:20;502:29;;540:33;567:5;540:33;:::i;:::-;492:87;;;;:::o;585:262::-;644:6;693:2;681:9;672:7;668:23;664:32;661:2;;;709:1;706;699:12;661:2;752:1;777:53;822:7;813:6;802:9;798:22;777:53;:::i;:::-;767:63;;723:117;651:196;;;;:::o;853:278::-;920:6;969:2;957:9;948:7;944:23;940:32;937:2;;;985:1;982;975:12;937:2;1028:1;1053:61;1106:7;1097:6;1086:9;1082:22;1053:61;:::i;:::-;1043:71;;999:125;927:204;;;;:::o;1137:407::-;1205:6;1213;1262:2;1250:9;1241:7;1237:23;1233:32;1230:2;;;1278:1;1275;1268:12;1230:2;1321:1;1346:53;1391:7;1382:6;1371:9;1367:22;1346:53;:::i;:::-;1336:63;;1292:117;1448:2;1474:53;1519:7;1510:6;1499:9;1495:22;1474:53;:::i;:::-;1464:63;;1419:118;1220:324;;;;;:::o;1550:407::-;1618:6;1626;1675:2;1663:9;1654:7;1650:23;1646:32;1643:2;;;1691:1;1688;1681:12;1643:2;1734:1;1759:53;1804:7;1795:6;1784:9;1780:22;1759:53;:::i;:::-;1749:63;;1705:117;1861:2;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1832:118;1633:324;;;;;:::o;1963:118::-;2050:24;2068:5;2050:24;:::i;:::-;2045:3;2038:37;2028:53;;:::o;2087:118::-;2174:24;2192:5;2174:24;:::i;:::-;2169:3;2162:37;2152:53;;:::o;2211:366::-;2353:3;2374:67;2438:2;2433:3;2374:67;:::i;:::-;2367:74;;2450:93;2539:3;2450:93;:::i;:::-;2568:2;2563:3;2559:12;2552:19;;2357:220;;;:::o;2583:366::-;2725:3;2746:67;2810:2;2805:3;2746:67;:::i;:::-;2739:74;;2822:93;2911:3;2822:93;:::i;:::-;2940:2;2935:3;2931:12;2924:19;;2729:220;;;:::o;2955:366::-;3097:3;3118:67;3182:2;3177:3;3118:67;:::i;:::-;3111:74;;3194:93;3283:3;3194:93;:::i;:::-;3312:2;3307:3;3303:12;3296:19;;3101:220;;;:::o;3327:366::-;3469:3;3490:67;3554:2;3549:3;3490:67;:::i;:::-;3483:74;;3566:93;3655:3;3566:93;:::i;:::-;3684:2;3679:3;3675:12;3668:19;;3473:220;;;:::o;3699:118::-;3786:24;3804:5;3786:24;:::i;:::-;3781:3;3774:37;3764:53;;:::o;3823:222::-;3916:4;3954:2;3943:9;3939:18;3931:26;;3967:71;4035:1;4024:9;4020:17;4011:6;3967:71;:::i;:::-;3921:124;;;;:::o;4051:442::-;4200:4;4238:2;4227:9;4223:18;4215:26;;4251:71;4319:1;4308:9;4304:17;4295:6;4251:71;:::i;:::-;4332:72;4400:2;4389:9;4385:18;4376:6;4332:72;:::i;:::-;4414;4482:2;4471:9;4467:18;4458:6;4414:72;:::i;:::-;4205:288;;;;;;:::o;4499:332::-;4620:4;4658:2;4647:9;4643:18;4635:26;;4671:71;4739:1;4728:9;4724:17;4715:6;4671:71;:::i;:::-;4752:72;4820:2;4809:9;4805:18;4796:6;4752:72;:::i;:::-;4625:206;;;;;:::o;4837:332::-;4958:4;4996:2;4985:9;4981:18;4973:26;;5009:71;5077:1;5066:9;5062:17;5053:6;5009:71;:::i;:::-;5090:72;5158:2;5147:9;5143:18;5134:6;5090:72;:::i;:::-;4963:206;;;;;:::o;5175:419::-;5341:4;5379:2;5368:9;5364:18;5356:26;;5428:9;5422:4;5418:20;5414:1;5403:9;5399:17;5392:47;5456:131;5582:4;5456:131;:::i;:::-;5448:139;;5346:248;;;:::o;5600:419::-;5766:4;5804:2;5793:9;5789:18;5781:26;;5853:9;5847:4;5843:20;5839:1;5828:9;5824:17;5817:47;5881:131;6007:4;5881:131;:::i;:::-;5873:139;;5771:248;;;:::o;6025:419::-;6191:4;6229:2;6218:9;6214:18;6206:26;;6278:9;6272:4;6268:20;6264:1;6253:9;6249:17;6242:47;6306:131;6432:4;6306:131;:::i;:::-;6298:139;;6196:248;;;:::o;6450:419::-;6616:4;6654:2;6643:9;6639:18;6631:26;;6703:9;6697:4;6693:20;6689:1;6678:9;6674:17;6667:47;6731:131;6857:4;6731:131;:::i;:::-;6723:139;;6621:248;;;:::o;6875:222::-;6968:4;7006:2;6995:9;6991:18;6983:26;;7019:71;7087:1;7076:9;7072:17;7063:6;7019:71;:::i;:::-;6973:124;;;;:::o;7103:332::-;7224:4;7262:2;7251:9;7247:18;7239:26;;7275:71;7343:1;7332:9;7328:17;7319:6;7275:71;:::i;:::-;7356:72;7424:2;7413:9;7409:18;7400:6;7356:72;:::i;:::-;7229:206;;;;;:::o;7441:169::-;7525:11;7559:6;7554:3;7547:19;7599:4;7594:3;7590:14;7575:29;;7537:73;;;;:::o;7616:185::-;7656:1;7673:20;7691:1;7673:20;:::i;:::-;7668:25;;7707:20;7725:1;7707:20;:::i;:::-;7702:25;;7746:1;7736:2;;7751:18;;:::i;:::-;7736:2;7793:1;7790;7786:9;7781:14;;7658:143;;;;:::o;7807:348::-;7847:7;7870:20;7888:1;7870:20;:::i;:::-;7865:25;;7904:20;7922:1;7904:20;:::i;:::-;7899:25;;8092:1;8024:66;8020:74;8017:1;8014:81;8009:1;8002:9;7995:17;7991:105;7988:2;;;8099:18;;:::i;:::-;7988:2;8147:1;8144;8140:9;8129:20;;7855:300;;;;:::o;8161:96::-;8198:7;8227:24;8245:5;8227:24;:::i;:::-;8216:35;;8206:51;;;:::o;8263:90::-;8297:7;8340:5;8333:13;8326:21;8315:32;;8305:48;;;:::o;8359:77::-;8396:7;8425:5;8414:16;;8404:32;;;:::o;8442:126::-;8479:7;8519:42;8512:5;8508:54;8497:65;;8487:81;;;:::o;8574:77::-;8611:7;8640:5;8629:16;;8619:32;;;:::o;8657:180::-;8705:77;8702:1;8695:88;8802:4;8799:1;8792:15;8826:4;8823:1;8816:15;8843:180;8891:77;8888:1;8881:88;8988:4;8985:1;8978:15;9012:4;9009:1;9002:15;9029:225;9169:34;9165:1;9157:6;9153:14;9146:58;9238:8;9233:2;9225:6;9221:15;9214:33;9135:119;:::o;9260:245::-;9400:34;9396:1;9388:6;9384:14;9377:58;9469:28;9464:2;9456:6;9452:15;9445:53;9366:139;:::o;9511:182::-;9651:34;9647:1;9639:6;9635:14;9628:58;9617:76;:::o;9699:243::-;9839:34;9835:1;9827:6;9823:14;9816:58;9908:26;9903:2;9895:6;9891:15;9884:51;9805:137;:::o;9948:122::-;10021:24;10039:5;10021:24;:::i;:::-;10014:5;10011:35;10001:2;;10060:1;10057;10050:12;10001:2;9991:79;:::o;10076:116::-;10146:21;10161:5;10146:21;:::i;:::-;10139:5;10136:32;10126:2;;10182:1;10179;10172:12;10126:2;10116:76;:::o;10198:122::-;10271:24;10289:5;10271:24;:::i;:::-;10264:5;10261:35;10251:2;;10310:1;10307;10300:12;10251:2;10241:79;:::o;10326:122::-;10399:24;10417:5;10399:24;:::i;:::-;10392:5;10389:35;10379:2;;10438:1;10435;10428:12;10379:2;10369:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Swap is Ownable {\n    using SafeMath for uint256;\n\n    IERC20 Gold;\n    IERC20 Silver;\n\n    uint256 public ratioEthToGold;\n    uint256 public ratioEthToSilver;\n\n    bytes32 private EthToGold = keccak256(\"Swap(ETH, Gold)\");\n    bytes32 private EthToSilver = keccak256(\"Swap(ETH, Silver)\");\n\n    bytes32 private GoldToEth = keccak256(\"Swap(Gold, ETH)\");\n    bytes32 private SilverToETh = keccak256(\"Swap(Silver, ETH)\");\n    bytes32 private SilverToGold = keccak256(\"Swap(Silver, Gold)\");\n    bytes32 private GoldToSilver = keccak256(\"Swap(Gold, Silver)\");\n\n    /// @notice Event emitted only on construction.\n    event SwapDeployed();\n\n    /// @notice Event emitted when ETH to token swap finished.\n    event EthToTokenSwapped(bytes32 _type, uint256 _amount);\n\n    /// @notice Event emitted when token to token or token to ETH swap finished.\n    event TokenToEthAndTokenToTokenSwapped(bytes32 _type, uint256 _amount);\n\n    /// @notice Event emitted when ETH to token ratio changed.\n    event TokenRatioChanged(\n        uint256 _newRatioEthToGold,\n        uint256 _newRatioEthToSilver\n    );\n\n    /**\n     * @dev Constructor function\n     * @param _Gold Interface of Gold token\n     * @param _Silver Interface of Silver token\n     * @param _ratioEthToGold Ratio between ETH and Gold\n     * @param _ratioEthToSilver Ratio between ETH and Silver\n     */\n    constructor(\n        IERC20 _Gold,\n        IERC20 _Silver,\n        uint256 _ratioEthToGold,\n        uint256 _ratioEthToSilver\n    ) {\n        Gold = _Gold;\n        Silver = _Silver;\n        ratioEthToGold = _ratioEthToGold;\n        ratioEthToSilver = _ratioEthToSilver;\n\n        emit SwapDeployed();\n    }\n\n    /**\n     * @dev Payable function to swap ETH to token\n     * @param _type Token type which should be swapped\n     * @param _amount Token amount\n     */\n    function swapEthFor(bytes32 _type, uint256 _amount) external payable {\n        if (_type == EthToGold) {\n            require(\n                ratioEthToGold * _amount == msg.value,\n                \"Swap: Caller hasn't got enough ETH for buying Gold token\"\n            );\n            Gold.transfer(msg.sender, _amount);\n        }\n        if (_type == EthToSilver) {\n            require(\n                ratioEthToSilver * _amount == msg.value,\n                \"Swap: Caller hasn't got enough ETH for buying Silver token\"\n            );\n            Silver.transfer(msg.sender, _amount);\n        }\n\n        emit EthToTokenSwapped(_type, _amount);\n    }\n\n    /**\n     * @dev External function to swap token to ETH and token to token\n     * @param _type Token type which should be swapped\n     * @param _amount Token Amount\n     */\n    function swapTokenFor(bytes32 _type, uint256 _amount) external {\n        if (_type == GoldToEth) {\n            Gold.transferFrom(msg.sender, address(this), _amount);\n            payable(msg.sender).transfer(_amount * ratioEthToGold);\n        } else if (_type == SilverToETh) {\n            Silver.transferFrom(msg.sender, address(this), _amount);\n            payable(msg.sender).transfer(_amount * ratioEthToSilver);\n        } else if (_type == GoldToSilver) {\n            Gold.transferFrom(msg.sender, address(this), _amount);\n\n            uint256 silverToGold = ratioEthToSilver * 1000 / ratioEthToGold;\n            Silver.transfer(\n                msg.sender,\n                _amount * silverToGold / 1000\n            );\n        } else if (_type == SilverToGold) {\n            Silver.transferFrom(msg.sender, address(this), _amount);\n            uint256 goldToSilver = ratioEthToGold * 1000 / ratioEthToSilver;\n            Gold.transfer(\n                msg.sender,\n                _amount * goldToSilver / 1000\n            );\n        }\n\n        emit TokenToEthAndTokenToTokenSwapped(_type, _amount);\n    }\n\n    /**\n     * @dev External function to set token ratios. This function can be called by only owner.\n     * @param _newRatioEthToGold New Eth to gold token ratio\n     * @param _newRatioEthToSilver New Eth to silver token ratio\n     */\n    function changeTokenRatio(\n        uint256 _newRatioEthToGold,\n        uint256 _newRatioEthToSilver\n    ) external onlyOwner {\n        ratioEthToGold = _newRatioEthToGold;\n        ratioEthToSilver = _newRatioEthToSilver;\n\n        emit TokenRatioChanged(_newRatioEthToGold, _newRatioEthToSilver);\n    }\n\n    receive() external payable {}\n}\n",
  "sourcePath": "E:\\BlockChain_Workspace\\Test\\TokenSwap\\contracts\\Swap.sol",
  "ast": {
    "absolutePath": "project:/contracts/Swap.sol",
    "exportedSymbols": {
      "Context": [
        773
      ],
      "IERC20": [
        727
      ],
      "Ownable": [
        103
      ],
      "SafeMath": [
        1085
      ],
      "Swap": [
        1511
      ]
    },
    "id": 1512,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1172,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 728,
        "src": "57:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 104,
        "src": "114:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1175,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 1086,
        "src": "167:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1176,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "243:7:9"
            },
            "id": 1177,
            "nodeType": "InheritanceSpecifier",
            "src": "243:7:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1511,
        "linearizedBaseContracts": [
          1511,
          103,
          773
        ],
        "name": "Swap",
        "nameLocation": "235:4:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1180,
            "libraryName": {
              "id": 1178,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1085,
              "src": "263:8:9"
            },
            "nodeType": "UsingForDirective",
            "src": "257:27:9",
            "typeName": {
              "id": 1179,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1183,
            "mutability": "mutable",
            "name": "Gold",
            "nameLocation": "297:4:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "290:11:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$727",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1182,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1181,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 727,
                "src": "290:6:9"
              },
              "referencedDeclaration": 727,
              "src": "290:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$727",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1186,
            "mutability": "mutable",
            "name": "Silver",
            "nameLocation": "314:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "307:13:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$727",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1185,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1184,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 727,
                "src": "307:6:9"
              },
              "referencedDeclaration": 727,
              "src": "307:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$727",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "62cb6e72",
            "id": 1188,
            "mutability": "mutable",
            "name": "ratioEthToGold",
            "nameLocation": "342:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "327:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1187,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "327:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ac5f807",
            "id": 1190,
            "mutability": "mutable",
            "name": "ratioEthToSilver",
            "nameLocation": "377:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "362:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "362:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1195,
            "mutability": "mutable",
            "name": "EthToGold",
            "nameLocation": "416:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "400:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1191,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "400:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "53776170284554482c20476f6c6429",
                  "id": 1193,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "438:17:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d1c7ca706a8e8b2bf28ed38043a077f5ca6a5a4397ada8d6b54e84d780e6caf8",
                    "typeString": "literal_string \"Swap(ETH, Gold)\""
                  },
                  "value": "Swap(ETH, Gold)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d1c7ca706a8e8b2bf28ed38043a077f5ca6a5a4397ada8d6b54e84d780e6caf8",
                    "typeString": "literal_string \"Swap(ETH, Gold)\""
                  }
                ],
                "id": 1192,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "428:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1194,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "428:28:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1200,
            "mutability": "mutable",
            "name": "EthToSilver",
            "nameLocation": "478:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "462:60:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1196,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "53776170284554482c2053696c76657229",
                  "id": 1198,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "502:19:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_11eb4b32f1fa735086fbe87e478059bb3a657a0ff464ffb9b901e483f181b2d9",
                    "typeString": "literal_string \"Swap(ETH, Silver)\""
                  },
                  "value": "Swap(ETH, Silver)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_11eb4b32f1fa735086fbe87e478059bb3a657a0ff464ffb9b901e483f181b2d9",
                    "typeString": "literal_string \"Swap(ETH, Silver)\""
                  }
                ],
                "id": 1197,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "492:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1199,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "492:30:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1205,
            "mutability": "mutable",
            "name": "GoldToEth",
            "nameLocation": "545:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "529:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1201,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "529:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5377617028476f6c642c2045544829",
                  "id": 1203,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "567:17:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_59287ce8f9c3e0bb5cf1ecf8706e85c420e21886f47d6207b9d8b63a24116df5",
                    "typeString": "literal_string \"Swap(Gold, ETH)\""
                  },
                  "value": "Swap(Gold, ETH)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_59287ce8f9c3e0bb5cf1ecf8706e85c420e21886f47d6207b9d8b63a24116df5",
                    "typeString": "literal_string \"Swap(Gold, ETH)\""
                  }
                ],
                "id": 1202,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "557:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "557:28:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1210,
            "mutability": "mutable",
            "name": "SilverToETh",
            "nameLocation": "607:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "591:60:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1206,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "537761702853696c7665722c2045544829",
                  "id": 1208,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "631:19:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a5cf0fa029b1efe51cd3198bd544c312bb51c63214eba2e77809b85d97d595d9",
                    "typeString": "literal_string \"Swap(Silver, ETH)\""
                  },
                  "value": "Swap(Silver, ETH)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a5cf0fa029b1efe51cd3198bd544c312bb51c63214eba2e77809b85d97d595d9",
                    "typeString": "literal_string \"Swap(Silver, ETH)\""
                  }
                ],
                "id": 1207,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "621:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1209,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "621:30:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1215,
            "mutability": "mutable",
            "name": "SilverToGold",
            "nameLocation": "673:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "657:62:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1211,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "537761702853696c7665722c20476f6c6429",
                  "id": 1213,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "698:20:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dbdda48e7d956aef5a29ae0f4f1da17a651ad4ea992658a18426de77665f52f0",
                    "typeString": "literal_string \"Swap(Silver, Gold)\""
                  },
                  "value": "Swap(Silver, Gold)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dbdda48e7d956aef5a29ae0f4f1da17a651ad4ea992658a18426de77665f52f0",
                    "typeString": "literal_string \"Swap(Silver, Gold)\""
                  }
                ],
                "id": 1212,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "688:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1214,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "688:31:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1220,
            "mutability": "mutable",
            "name": "GoldToSilver",
            "nameLocation": "741:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "725:62:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1216,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "725:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5377617028476f6c642c2053696c76657229",
                  "id": 1218,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "766:20:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d96672f10fae8cbf655f1fa056e98e8e2076e311e88ceabc485f8c30468a67af",
                    "typeString": "literal_string \"Swap(Gold, Silver)\""
                  },
                  "value": "Swap(Gold, Silver)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d96672f10fae8cbf655f1fa056e98e8e2076e311e88ceabc485f8c30468a67af",
                    "typeString": "literal_string \"Swap(Gold, Silver)\""
                  }
                ],
                "id": 1217,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "756:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1219,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "756:31:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1221,
              "nodeType": "StructuredDocumentation",
              "src": "794:47:9",
              "text": "@notice Event emitted only on construction."
            },
            "id": 1223,
            "name": "SwapDeployed",
            "nameLocation": "852:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:2:9"
            },
            "src": "846:21:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1224,
              "nodeType": "StructuredDocumentation",
              "src": "873:58:9",
              "text": "@notice Event emitted when ETH to token swap finished."
            },
            "id": 1230,
            "name": "EthToTokenSwapped",
            "nameLocation": "942:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1226,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "968:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1230,
                  "src": "960:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1225,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "983:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1230,
                  "src": "975:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "959:32:9"
            },
            "src": "936:56:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1231,
              "nodeType": "StructuredDocumentation",
              "src": "998:76:9",
              "text": "@notice Event emitted when token to token or token to ETH swap finished."
            },
            "id": 1237,
            "name": "TokenToEthAndTokenToTokenSwapped",
            "nameLocation": "1085:32:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1233,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "1126:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "1118:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1141:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "1133:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:32:9"
            },
            "src": "1079:71:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1238,
              "nodeType": "StructuredDocumentation",
              "src": "1156:58:9",
              "text": "@notice Event emitted when ETH to token ratio changed."
            },
            "id": 1244,
            "name": "TokenRatioChanged",
            "nameLocation": "1225:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1240,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newRatioEthToGold",
                  "nameLocation": "1260:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "1252:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newRatioEthToSilver",
                  "nameLocation": "1296:20:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "1288:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:80:9"
            },
            "src": "1219:104:9"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "1720:173:9",
              "statements": [
                {
                  "expression": {
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1258,
                      "name": "Gold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "1730:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1259,
                      "name": "_Gold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "1737:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1730:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:12:9"
                },
                {
                  "expression": {
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1262,
                      "name": "Silver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1186,
                      "src": "1752:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1263,
                      "name": "_Silver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1251,
                      "src": "1761:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1752:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:16:9"
                },
                {
                  "expression": {
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1266,
                      "name": "ratioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "1778:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1267,
                      "name": "_ratioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "1795:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1778:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:32:9"
                },
                {
                  "expression": {
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1270,
                      "name": "ratioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "1820:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1271,
                      "name": "_ratioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1255,
                      "src": "1839:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1820:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:36:9"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1274,
                      "name": "SwapDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "1872:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1872:14:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "EmitStatement",
                  "src": "1867:19:9"
                }
              ]
            },
            "documentation": {
              "id": 1245,
              "nodeType": "StructuredDocumentation",
              "src": "1329:254:9",
              "text": " @dev Constructor function\n @param _Gold Interface of Gold token\n @param _Silver Interface of Silver token\n @param _ratioEthToGold Ratio between ETH and Gold\n @param _ratioEthToSilver Ratio between ETH and Silver"
            },
            "id": 1278,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1248,
                  "mutability": "mutable",
                  "name": "_Gold",
                  "nameLocation": "1616:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1609:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$727",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1247,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1246,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 727,
                      "src": "1609:6:9"
                    },
                    "referencedDeclaration": 727,
                    "src": "1609:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_Silver",
                  "nameLocation": "1638:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1631:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$727",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1249,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 727,
                      "src": "1631:6:9"
                    },
                    "referencedDeclaration": 727,
                    "src": "1631:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_ratioEthToGold",
                  "nameLocation": "1663:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1655:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "_ratioEthToSilver",
                  "nameLocation": "1696:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1688:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1599:120:9"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:0:9"
            },
            "scope": 1511,
            "src": "1588:305:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "2124:580:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1286,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "2138:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1287,
                      "name": "EthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "2147:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2138:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1308,
                  "nodeType": "IfStatement",
                  "src": "2134:249:9",
                  "trueBody": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "2158:225:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1290,
                                  "name": "ratioEthToGold",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1188,
                                  "src": "2197:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1291,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "2214:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2197:24:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1293,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2225:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2225:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2197:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537761703a2043616c6c6572206861736e277420676f7420656e6f7567682045544820666f7220627579696e6720476f6c6420746f6b656e",
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2252:58:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Gold token\""
                              },
                              "value": "Swap: Caller hasn't got enough ETH for buying Gold token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Gold token\""
                              }
                            ],
                            "id": 1289,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2172:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2172:152:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1298,
                        "nodeType": "ExpressionStatement",
                        "src": "2172:152:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1302,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2352:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2352:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1304,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "2364:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1299,
                              "name": "Gold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "2338:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$727",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 676,
                            "src": "2338:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2338:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1306,
                        "nodeType": "ExpressionStatement",
                        "src": "2338:34:9"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1309,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "2396:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1310,
                      "name": "EthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "2405:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2396:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1331,
                  "nodeType": "IfStatement",
                  "src": "2392:257:9",
                  "trueBody": {
                    "id": 1330,
                    "nodeType": "Block",
                    "src": "2418:231:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1313,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "2457:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1314,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "2476:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2457:26:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1316,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2487:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2487:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2457:39:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537761703a2043616c6c6572206861736e277420676f7420656e6f7567682045544820666f7220627579696e672053696c76657220746f6b656e",
                              "id": 1319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2514:60:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Silver token\""
                              },
                              "value": "Swap: Caller hasn't got enough ETH for buying Silver token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Silver token\""
                              }
                            ],
                            "id": 1312,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2432:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2432:156:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1321,
                        "nodeType": "ExpressionStatement",
                        "src": "2432:156:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1325,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2618:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2618:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1327,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "2630:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1322,
                              "name": "Silver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "2602:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$727",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 676,
                            "src": "2602:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2602:36:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1329,
                        "nodeType": "ExpressionStatement",
                        "src": "2602:36:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1333,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "2682:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1334,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "2689:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1332,
                      "name": "EthToTokenSwapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "2664:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2664:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "EmitStatement",
                  "src": "2659:38:9"
                }
              ]
            },
            "documentation": {
              "id": 1279,
              "nodeType": "StructuredDocumentation",
              "src": "1899:151:9",
              "text": " @dev Payable function to swap ETH to token\n @param _type Token type which should be swapped\n @param _amount Token amount"
            },
            "functionSelector": "df32dac7",
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEthFor",
            "nameLocation": "2064:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "2083:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "2075:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2098:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "2090:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2074:32:9"
            },
            "returnParameters": {
              "id": 1285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2124:0:9"
            },
            "scope": 1511,
            "src": "2055:649:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1481,
              "nodeType": "Block",
              "src": "2949:1045:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1346,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1341,
                      "src": "2963:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1347,
                      "name": "GoldToEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "2972:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2963:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1373,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "3139:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1374,
                        "name": "SilverToETh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "3148:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3139:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1400,
                          "name": "_type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "3321:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1401,
                          "name": "GoldToSilver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1220,
                          "src": "3330:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3321:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1436,
                            "name": "_type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "3628:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1437,
                            "name": "SilverToGold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1215,
                            "src": "3637:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3628:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1472,
                        "nodeType": "IfStatement",
                        "src": "3624:300:9",
                        "trueBody": {
                          "id": 1471,
                          "nodeType": "Block",
                          "src": "3651:273:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1442,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3685:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1443,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3685:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1446,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "3705:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swap_$1511",
                                          "typeString": "contract Swap"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swap_$1511",
                                          "typeString": "contract Swap"
                                        }
                                      ],
                                      "id": 1445,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3697:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1444,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3697:7:9",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3697:13:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1448,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1343,
                                    "src": "3712:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1439,
                                    "name": "Silver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1186,
                                    "src": "3665:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$727",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 708,
                                  "src": "3665:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3665:55:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1450,
                              "nodeType": "ExpressionStatement",
                              "src": "3665:55:9"
                            },
                            {
                              "assignments": [
                                1452
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1452,
                                  "mutability": "mutable",
                                  "name": "goldToSilver",
                                  "nameLocation": "3742:12:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1471,
                                  "src": "3734:20:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1451,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3734:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1458,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1453,
                                    "name": "ratioEthToGold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1188,
                                    "src": "3757:14:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "31303030",
                                    "id": 1454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3774:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  },
                                  "src": "3757:21:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1456,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "3781:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3757:40:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3734:63:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1462,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3842:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3842:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1466,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1464,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1343,
                                        "src": "3870:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1465,
                                        "name": "goldToSilver",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1452,
                                        "src": "3880:12:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3870:22:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31303030",
                                      "id": 1467,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3895:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "src": "3870:29:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1459,
                                    "name": "Gold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "3811:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$727",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 676,
                                  "src": "3811:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3811:102:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1470,
                              "nodeType": "ExpressionStatement",
                              "src": "3811:102:9"
                            }
                          ]
                        }
                      },
                      "id": 1473,
                      "nodeType": "IfStatement",
                      "src": "3317:607:9",
                      "trueBody": {
                        "id": 1435,
                        "nodeType": "Block",
                        "src": "3344:274:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1406,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3376:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3376:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1410,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3396:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Swap_$1511",
                                        "typeString": "contract Swap"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Swap_$1511",
                                        "typeString": "contract Swap"
                                      }
                                    ],
                                    "id": 1409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3388:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1408,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3388:7:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3388:13:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1412,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "3403:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1403,
                                  "name": "Gold",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1183,
                                  "src": "3358:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$727",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 708,
                                "src": "3358:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3358:53:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1414,
                            "nodeType": "ExpressionStatement",
                            "src": "3358:53:9"
                          },
                          {
                            "assignments": [
                              1416
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1416,
                                "mutability": "mutable",
                                "name": "silverToGold",
                                "nameLocation": "3434:12:9",
                                "nodeType": "VariableDeclaration",
                                "scope": 1435,
                                "src": "3426:20:9",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1415,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3426:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1422,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1417,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "3449:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 1418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3468:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "3449:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1420,
                                "name": "ratioEthToGold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "3475:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3449:40:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3426:63:9"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1426,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3536:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3536:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1428,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1343,
                                      "src": "3564:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1429,
                                      "name": "silverToGold",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1416,
                                      "src": "3574:12:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3564:22:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "31303030",
                                    "id": 1431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3589:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  },
                                  "src": "3564:29:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1423,
                                  "name": "Silver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1186,
                                  "src": "3503:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$727",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 676,
                                "src": "3503:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3503:104:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1434,
                            "nodeType": "ExpressionStatement",
                            "src": "3503:104:9"
                          }
                        ]
                      }
                    },
                    "id": 1474,
                    "nodeType": "IfStatement",
                    "src": "3135:789:9",
                    "trueBody": {
                      "id": 1399,
                      "nodeType": "Block",
                      "src": "3161:150:9",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1379,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3195:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3195:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1383,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "3215:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Swap_$1511",
                                      "typeString": "contract Swap"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Swap_$1511",
                                      "typeString": "contract Swap"
                                    }
                                  ],
                                  "id": 1382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3207:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1381,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3207:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3207:13:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1385,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "3222:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1376,
                                "name": "Silver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "3175:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$727",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 708,
                              "src": "3175:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3175:55:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1387,
                          "nodeType": "ExpressionStatement",
                          "src": "3175:55:9"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1394,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "3273:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1395,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "3283:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3273:26:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1390,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3252:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3252:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3244:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1388,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3244:8:9",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3244:19:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "3244:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 1397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3244:56:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1398,
                          "nodeType": "ExpressionStatement",
                          "src": "3244:56:9"
                        }
                      ]
                    }
                  },
                  "id": 1475,
                  "nodeType": "IfStatement",
                  "src": "2959:965:9",
                  "trueBody": {
                    "id": 1372,
                    "nodeType": "Block",
                    "src": "2983:146:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1352,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3015:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3015:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1356,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3035:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swap_$1511",
                                    "typeString": "contract Swap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Swap_$1511",
                                    "typeString": "contract Swap"
                                  }
                                ],
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3027:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1354,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3027:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3027:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1358,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1343,
                              "src": "3042:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1349,
                              "name": "Gold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "2997:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$727",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 708,
                            "src": "2997:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2997:53:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "2997:53:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1367,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "3093:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1368,
                                "name": "ratioEthToGold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "3103:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3093:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1363,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3072:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3072:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3064:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1361,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3064:8:9",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3064:19:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "3064:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1371,
                        "nodeType": "ExpressionStatement",
                        "src": "3064:54:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1477,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "3972:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1478,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "3979:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1476,
                      "name": "TokenToEthAndTokenToTokenSwapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1237,
                      "src": "3939:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 1479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3939:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1480,
                  "nodeType": "EmitStatement",
                  "src": "3934:53:9"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "2710:171:9",
              "text": " @dev External function to swap token to ETH and token to token\n @param _type Token type which should be swapped\n @param _amount Token Amount"
            },
            "functionSelector": "01f89665",
            "id": 1482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokenFor",
            "nameLocation": "2895:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "2916:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1482,
                  "src": "2908:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2908:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2931:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1482,
                  "src": "2923:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2907:32:9"
            },
            "returnParameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2949:0:9"
            },
            "scope": 1511,
            "src": "2886:1108:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "4361:176:9",
              "statements": [
                {
                  "expression": {
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1492,
                      "name": "ratioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "4371:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1493,
                      "name": "_newRatioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1485,
                      "src": "4388:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4371:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "4371:35:9"
                },
                {
                  "expression": {
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1496,
                      "name": "ratioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "4416:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1497,
                      "name": "_newRatioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "4435:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4416:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1499,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:39:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1501,
                        "name": "_newRatioEthToGold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "4489:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1502,
                        "name": "_newRatioEthToSilver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "4509:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1500,
                      "name": "TokenRatioChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "4471:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "EmitStatement",
                  "src": "4466:64:9"
                }
              ]
            },
            "documentation": {
              "id": 1483,
              "nodeType": "StructuredDocumentation",
              "src": "4000:231:9",
              "text": " @dev External function to set token ratios. This function can be called by only owner.\n @param _newRatioEthToGold New Eth to gold token ratio\n @param _newRatioEthToSilver New Eth to silver token ratio"
            },
            "functionSelector": "86956e23",
            "id": 1506,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "4351:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4351:9:9"
              }
            ],
            "name": "changeTokenRatio",
            "nameLocation": "4245:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "_newRatioEthToGold",
                  "nameLocation": "4279:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "4271:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4271:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "_newRatioEthToSilver",
                  "nameLocation": "4315:20:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "4307:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4307:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4261:80:9"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4361:0:9"
            },
            "scope": 1511,
            "src": "4236:301:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "4570:2:9",
              "statements": []
            },
            "id": 1510,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4550:2:9"
            },
            "returnParameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4570:0:9"
            },
            "scope": 1511,
            "src": "4543:29:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1512,
        "src": "226:4348:9",
        "usedErrors": []
      }
    ],
    "src": "32:4543:9"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Swap.sol",
    "exportedSymbols": {
      "Context": [
        773
      ],
      "IERC20": [
        727
      ],
      "Ownable": [
        103
      ],
      "SafeMath": [
        1085
      ],
      "Swap": [
        1511
      ]
    },
    "id": 1512,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1172,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 728,
        "src": "57:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 104,
        "src": "114:52:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1175,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1512,
        "sourceUnit": 1086,
        "src": "167:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1176,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "243:7:9"
            },
            "id": 1177,
            "nodeType": "InheritanceSpecifier",
            "src": "243:7:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1511,
        "linearizedBaseContracts": [
          1511,
          103,
          773
        ],
        "name": "Swap",
        "nameLocation": "235:4:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1180,
            "libraryName": {
              "id": 1178,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1085,
              "src": "263:8:9"
            },
            "nodeType": "UsingForDirective",
            "src": "257:27:9",
            "typeName": {
              "id": 1179,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1183,
            "mutability": "mutable",
            "name": "Gold",
            "nameLocation": "297:4:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "290:11:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$727",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1182,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1181,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 727,
                "src": "290:6:9"
              },
              "referencedDeclaration": 727,
              "src": "290:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$727",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1186,
            "mutability": "mutable",
            "name": "Silver",
            "nameLocation": "314:6:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "307:13:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$727",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1185,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1184,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 727,
                "src": "307:6:9"
              },
              "referencedDeclaration": 727,
              "src": "307:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$727",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "62cb6e72",
            "id": 1188,
            "mutability": "mutable",
            "name": "ratioEthToGold",
            "nameLocation": "342:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "327:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1187,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "327:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ac5f807",
            "id": 1190,
            "mutability": "mutable",
            "name": "ratioEthToSilver",
            "nameLocation": "377:16:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "362:31:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "362:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1195,
            "mutability": "mutable",
            "name": "EthToGold",
            "nameLocation": "416:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "400:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1191,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "400:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "53776170284554482c20476f6c6429",
                  "id": 1193,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "438:17:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d1c7ca706a8e8b2bf28ed38043a077f5ca6a5a4397ada8d6b54e84d780e6caf8",
                    "typeString": "literal_string \"Swap(ETH, Gold)\""
                  },
                  "value": "Swap(ETH, Gold)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d1c7ca706a8e8b2bf28ed38043a077f5ca6a5a4397ada8d6b54e84d780e6caf8",
                    "typeString": "literal_string \"Swap(ETH, Gold)\""
                  }
                ],
                "id": 1192,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "428:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1194,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "428:28:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1200,
            "mutability": "mutable",
            "name": "EthToSilver",
            "nameLocation": "478:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "462:60:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1196,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "462:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "53776170284554482c2053696c76657229",
                  "id": 1198,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "502:19:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_11eb4b32f1fa735086fbe87e478059bb3a657a0ff464ffb9b901e483f181b2d9",
                    "typeString": "literal_string \"Swap(ETH, Silver)\""
                  },
                  "value": "Swap(ETH, Silver)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_11eb4b32f1fa735086fbe87e478059bb3a657a0ff464ffb9b901e483f181b2d9",
                    "typeString": "literal_string \"Swap(ETH, Silver)\""
                  }
                ],
                "id": 1197,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "492:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1199,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "492:30:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1205,
            "mutability": "mutable",
            "name": "GoldToEth",
            "nameLocation": "545:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "529:56:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1201,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "529:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5377617028476f6c642c2045544829",
                  "id": 1203,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "567:17:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_59287ce8f9c3e0bb5cf1ecf8706e85c420e21886f47d6207b9d8b63a24116df5",
                    "typeString": "literal_string \"Swap(Gold, ETH)\""
                  },
                  "value": "Swap(Gold, ETH)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_59287ce8f9c3e0bb5cf1ecf8706e85c420e21886f47d6207b9d8b63a24116df5",
                    "typeString": "literal_string \"Swap(Gold, ETH)\""
                  }
                ],
                "id": 1202,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "557:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "557:28:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1210,
            "mutability": "mutable",
            "name": "SilverToETh",
            "nameLocation": "607:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "591:60:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1206,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "591:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "537761702853696c7665722c2045544829",
                  "id": 1208,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "631:19:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_a5cf0fa029b1efe51cd3198bd544c312bb51c63214eba2e77809b85d97d595d9",
                    "typeString": "literal_string \"Swap(Silver, ETH)\""
                  },
                  "value": "Swap(Silver, ETH)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_a5cf0fa029b1efe51cd3198bd544c312bb51c63214eba2e77809b85d97d595d9",
                    "typeString": "literal_string \"Swap(Silver, ETH)\""
                  }
                ],
                "id": 1207,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "621:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1209,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "621:30:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1215,
            "mutability": "mutable",
            "name": "SilverToGold",
            "nameLocation": "673:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "657:62:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1211,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "537761702853696c7665722c20476f6c6429",
                  "id": 1213,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "698:20:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dbdda48e7d956aef5a29ae0f4f1da17a651ad4ea992658a18426de77665f52f0",
                    "typeString": "literal_string \"Swap(Silver, Gold)\""
                  },
                  "value": "Swap(Silver, Gold)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dbdda48e7d956aef5a29ae0f4f1da17a651ad4ea992658a18426de77665f52f0",
                    "typeString": "literal_string \"Swap(Silver, Gold)\""
                  }
                ],
                "id": 1212,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "688:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1214,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "688:31:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1220,
            "mutability": "mutable",
            "name": "GoldToSilver",
            "nameLocation": "741:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1511,
            "src": "725:62:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1216,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "725:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5377617028476f6c642c2053696c76657229",
                  "id": 1218,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "766:20:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d96672f10fae8cbf655f1fa056e98e8e2076e311e88ceabc485f8c30468a67af",
                    "typeString": "literal_string \"Swap(Gold, Silver)\""
                  },
                  "value": "Swap(Gold, Silver)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d96672f10fae8cbf655f1fa056e98e8e2076e311e88ceabc485f8c30468a67af",
                    "typeString": "literal_string \"Swap(Gold, Silver)\""
                  }
                ],
                "id": 1217,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "756:9:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 1219,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "756:31:9",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1221,
              "nodeType": "StructuredDocumentation",
              "src": "794:47:9",
              "text": "@notice Event emitted only on construction."
            },
            "id": 1223,
            "name": "SwapDeployed",
            "nameLocation": "852:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:2:9"
            },
            "src": "846:21:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1224,
              "nodeType": "StructuredDocumentation",
              "src": "873:58:9",
              "text": "@notice Event emitted when ETH to token swap finished."
            },
            "id": 1230,
            "name": "EthToTokenSwapped",
            "nameLocation": "942:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1226,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "968:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1230,
                  "src": "960:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1225,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "960:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "983:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1230,
                  "src": "975:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "959:32:9"
            },
            "src": "936:56:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1231,
              "nodeType": "StructuredDocumentation",
              "src": "998:76:9",
              "text": "@notice Event emitted when token to token or token to ETH swap finished."
            },
            "id": 1237,
            "name": "TokenToEthAndTokenToTokenSwapped",
            "nameLocation": "1085:32:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1233,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "1126:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "1118:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1141:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1237,
                  "src": "1133:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1117:32:9"
            },
            "src": "1079:71:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1238,
              "nodeType": "StructuredDocumentation",
              "src": "1156:58:9",
              "text": "@notice Event emitted when ETH to token ratio changed."
            },
            "id": 1244,
            "name": "TokenRatioChanged",
            "nameLocation": "1225:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1240,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newRatioEthToGold",
                  "nameLocation": "1260:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "1252:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newRatioEthToSilver",
                  "nameLocation": "1296:20:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "1288:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:80:9"
            },
            "src": "1219:104:9"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "1720:173:9",
              "statements": [
                {
                  "expression": {
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1258,
                      "name": "Gold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "1730:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1259,
                      "name": "_Gold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "1737:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1730:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1261,
                  "nodeType": "ExpressionStatement",
                  "src": "1730:12:9"
                },
                {
                  "expression": {
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1262,
                      "name": "Silver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1186,
                      "src": "1752:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1263,
                      "name": "_Silver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1251,
                      "src": "1761:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$727",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1752:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:16:9"
                },
                {
                  "expression": {
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1266,
                      "name": "ratioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "1778:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1267,
                      "name": "_ratioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "1795:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1778:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:32:9"
                },
                {
                  "expression": {
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1270,
                      "name": "ratioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "1820:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1271,
                      "name": "_ratioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1255,
                      "src": "1839:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1820:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:36:9"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1274,
                      "name": "SwapDeployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "1872:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1872:14:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "EmitStatement",
                  "src": "1867:19:9"
                }
              ]
            },
            "documentation": {
              "id": 1245,
              "nodeType": "StructuredDocumentation",
              "src": "1329:254:9",
              "text": " @dev Constructor function\n @param _Gold Interface of Gold token\n @param _Silver Interface of Silver token\n @param _ratioEthToGold Ratio between ETH and Gold\n @param _ratioEthToSilver Ratio between ETH and Silver"
            },
            "id": 1278,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1248,
                  "mutability": "mutable",
                  "name": "_Gold",
                  "nameLocation": "1616:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1609:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$727",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1247,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1246,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 727,
                      "src": "1609:6:9"
                    },
                    "referencedDeclaration": 727,
                    "src": "1609:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_Silver",
                  "nameLocation": "1638:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1631:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$727",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1250,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1249,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 727,
                      "src": "1631:6:9"
                    },
                    "referencedDeclaration": 727,
                    "src": "1631:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$727",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_ratioEthToGold",
                  "nameLocation": "1663:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1655:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "_ratioEthToSilver",
                  "nameLocation": "1696:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "1688:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1599:120:9"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:0:9"
            },
            "scope": 1511,
            "src": "1588:305:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "2124:580:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1286,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "2138:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1287,
                      "name": "EthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1195,
                      "src": "2147:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2138:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1308,
                  "nodeType": "IfStatement",
                  "src": "2134:249:9",
                  "trueBody": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "2158:225:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1290,
                                  "name": "ratioEthToGold",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1188,
                                  "src": "2197:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1291,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "2214:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2197:24:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1293,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2225:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2225:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2197:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537761703a2043616c6c6572206861736e277420676f7420656e6f7567682045544820666f7220627579696e6720476f6c6420746f6b656e",
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2252:58:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Gold token\""
                              },
                              "value": "Swap: Caller hasn't got enough ETH for buying Gold token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac4bf300f8dac553996cbc65b8510c737bc8fb55ddfd7ddbe5453d09516674c3",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Gold token\""
                              }
                            ],
                            "id": 1289,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2172:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2172:152:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1298,
                        "nodeType": "ExpressionStatement",
                        "src": "2172:152:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1302,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2352:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2352:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1304,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "2364:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1299,
                              "name": "Gold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "2338:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$727",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 676,
                            "src": "2338:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2338:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1306,
                        "nodeType": "ExpressionStatement",
                        "src": "2338:34:9"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1309,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "2396:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1310,
                      "name": "EthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "2405:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2396:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1331,
                  "nodeType": "IfStatement",
                  "src": "2392:257:9",
                  "trueBody": {
                    "id": 1330,
                    "nodeType": "Block",
                    "src": "2418:231:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1313,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "2457:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1314,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "2476:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2457:26:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1316,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2487:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2487:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2457:39:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537761703a2043616c6c6572206861736e277420676f7420656e6f7567682045544820666f7220627579696e672053696c76657220746f6b656e",
                              "id": 1319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2514:60:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Silver token\""
                              },
                              "value": "Swap: Caller hasn't got enough ETH for buying Silver token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_54b7f56fa14241c766039f9a15efbd725b8cfbbcfcd85fa67f99b3ec73492506",
                                "typeString": "literal_string \"Swap: Caller hasn't got enough ETH for buying Silver token\""
                              }
                            ],
                            "id": 1312,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2432:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2432:156:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1321,
                        "nodeType": "ExpressionStatement",
                        "src": "2432:156:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1325,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2618:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2618:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1327,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "2630:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1322,
                              "name": "Silver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "2602:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$727",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 676,
                            "src": "2602:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2602:36:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1329,
                        "nodeType": "ExpressionStatement",
                        "src": "2602:36:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1333,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "2682:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1334,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "2689:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1332,
                      "name": "EthToTokenSwapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "2664:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2664:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "EmitStatement",
                  "src": "2659:38:9"
                }
              ]
            },
            "documentation": {
              "id": 1279,
              "nodeType": "StructuredDocumentation",
              "src": "1899:151:9",
              "text": " @dev Payable function to swap ETH to token\n @param _type Token type which should be swapped\n @param _amount Token amount"
            },
            "functionSelector": "df32dac7",
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapEthFor",
            "nameLocation": "2064:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "2083:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "2075:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2098:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "2090:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2074:32:9"
            },
            "returnParameters": {
              "id": 1285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2124:0:9"
            },
            "scope": 1511,
            "src": "2055:649:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1481,
              "nodeType": "Block",
              "src": "2949:1045:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1346,
                      "name": "_type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1341,
                      "src": "2963:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1347,
                      "name": "GoldToEth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "2972:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2963:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1373,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "3139:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1374,
                        "name": "SilverToETh",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "3148:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3139:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1400,
                          "name": "_type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "3321:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1401,
                          "name": "GoldToSilver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1220,
                          "src": "3330:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3321:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1436,
                            "name": "_type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "3628:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1437,
                            "name": "SilverToGold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1215,
                            "src": "3637:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3628:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1472,
                        "nodeType": "IfStatement",
                        "src": "3624:300:9",
                        "trueBody": {
                          "id": 1471,
                          "nodeType": "Block",
                          "src": "3651:273:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1442,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3685:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1443,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3685:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1446,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "3705:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Swap_$1511",
                                          "typeString": "contract Swap"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Swap_$1511",
                                          "typeString": "contract Swap"
                                        }
                                      ],
                                      "id": 1445,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3697:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1444,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3697:7:9",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3697:13:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1448,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1343,
                                    "src": "3712:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1439,
                                    "name": "Silver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1186,
                                    "src": "3665:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$727",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 708,
                                  "src": "3665:19:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3665:55:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1450,
                              "nodeType": "ExpressionStatement",
                              "src": "3665:55:9"
                            },
                            {
                              "assignments": [
                                1452
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1452,
                                  "mutability": "mutable",
                                  "name": "goldToSilver",
                                  "nameLocation": "3742:12:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1471,
                                  "src": "3734:20:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1451,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3734:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1458,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1453,
                                    "name": "ratioEthToGold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1188,
                                    "src": "3757:14:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "31303030",
                                    "id": 1454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3774:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  },
                                  "src": "3757:21:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1456,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "3781:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3757:40:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3734:63:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1462,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3842:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3842:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1466,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1464,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1343,
                                        "src": "3870:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1465,
                                        "name": "goldToSilver",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1452,
                                        "src": "3880:12:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3870:22:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31303030",
                                      "id": 1467,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3895:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                      },
                                      "value": "1000"
                                    },
                                    "src": "3870:29:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1459,
                                    "name": "Gold",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "3811:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$727",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 676,
                                  "src": "3811:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3811:102:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1470,
                              "nodeType": "ExpressionStatement",
                              "src": "3811:102:9"
                            }
                          ]
                        }
                      },
                      "id": 1473,
                      "nodeType": "IfStatement",
                      "src": "3317:607:9",
                      "trueBody": {
                        "id": 1435,
                        "nodeType": "Block",
                        "src": "3344:274:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1406,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3376:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3376:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1410,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "3396:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Swap_$1511",
                                        "typeString": "contract Swap"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Swap_$1511",
                                        "typeString": "contract Swap"
                                      }
                                    ],
                                    "id": 1409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3388:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1408,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3388:7:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3388:13:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1412,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "3403:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1403,
                                  "name": "Gold",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1183,
                                  "src": "3358:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$727",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 708,
                                "src": "3358:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3358:53:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1414,
                            "nodeType": "ExpressionStatement",
                            "src": "3358:53:9"
                          },
                          {
                            "assignments": [
                              1416
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1416,
                                "mutability": "mutable",
                                "name": "silverToGold",
                                "nameLocation": "3434:12:9",
                                "nodeType": "VariableDeclaration",
                                "scope": 1435,
                                "src": "3426:20:9",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1415,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3426:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1422,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1417,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "3449:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 1418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3468:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "3449:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1420,
                                "name": "ratioEthToGold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "3475:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3449:40:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "3426:63:9"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1426,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3536:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3536:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1430,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1428,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1343,
                                      "src": "3564:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1429,
                                      "name": "silverToGold",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1416,
                                      "src": "3574:12:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3564:22:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "31303030",
                                    "id": 1431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3589:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000_by_1",
                                      "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                  },
                                  "src": "3564:29:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1423,
                                  "name": "Silver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1186,
                                  "src": "3503:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$727",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 676,
                                "src": "3503:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3503:104:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1434,
                            "nodeType": "ExpressionStatement",
                            "src": "3503:104:9"
                          }
                        ]
                      }
                    },
                    "id": 1474,
                    "nodeType": "IfStatement",
                    "src": "3135:789:9",
                    "trueBody": {
                      "id": 1399,
                      "nodeType": "Block",
                      "src": "3161:150:9",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1379,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3195:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3195:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 1383,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "3215:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Swap_$1511",
                                      "typeString": "contract Swap"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Swap_$1511",
                                      "typeString": "contract Swap"
                                    }
                                  ],
                                  "id": 1382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3207:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1381,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3207:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3207:13:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1385,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "3222:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1376,
                                "name": "Silver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "3175:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$727",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 708,
                              "src": "3175:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3175:55:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1387,
                          "nodeType": "ExpressionStatement",
                          "src": "3175:55:9"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1394,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "3273:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1395,
                                  "name": "ratioEthToSilver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1190,
                                  "src": "3283:16:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3273:26:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1390,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3252:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3252:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1389,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3244:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1388,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3244:8:9",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3244:19:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "3244:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 1397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3244:56:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1398,
                          "nodeType": "ExpressionStatement",
                          "src": "3244:56:9"
                        }
                      ]
                    }
                  },
                  "id": 1475,
                  "nodeType": "IfStatement",
                  "src": "2959:965:9",
                  "trueBody": {
                    "id": 1372,
                    "nodeType": "Block",
                    "src": "2983:146:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1352,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3015:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3015:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1356,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3035:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swap_$1511",
                                    "typeString": "contract Swap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Swap_$1511",
                                    "typeString": "contract Swap"
                                  }
                                ],
                                "id": 1355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3027:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1354,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3027:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3027:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1358,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1343,
                              "src": "3042:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1349,
                              "name": "Gold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "2997:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$727",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 708,
                            "src": "2997:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2997:53:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "2997:53:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1367,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "3093:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1368,
                                "name": "ratioEthToGold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "3103:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3093:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1363,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3072:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3072:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3064:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1361,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3064:8:9",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3064:19:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "3064:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:54:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1371,
                        "nodeType": "ExpressionStatement",
                        "src": "3064:54:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1477,
                        "name": "_type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "3972:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1478,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1343,
                        "src": "3979:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1476,
                      "name": "TokenToEthAndTokenToTokenSwapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1237,
                      "src": "3939:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256)"
                      }
                    },
                    "id": 1479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3939:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1480,
                  "nodeType": "EmitStatement",
                  "src": "3934:53:9"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "2710:171:9",
              "text": " @dev External function to swap token to ETH and token to token\n @param _type Token type which should be swapped\n @param _amount Token Amount"
            },
            "functionSelector": "01f89665",
            "id": 1482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokenFor",
            "nameLocation": "2895:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "_type",
                  "nameLocation": "2916:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1482,
                  "src": "2908:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2908:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2931:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1482,
                  "src": "2923:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2907:32:9"
            },
            "returnParameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2949:0:9"
            },
            "scope": 1511,
            "src": "2886:1108:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "4361:176:9",
              "statements": [
                {
                  "expression": {
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1492,
                      "name": "ratioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "4371:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1493,
                      "name": "_newRatioEthToGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1485,
                      "src": "4388:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4371:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "4371:35:9"
                },
                {
                  "expression": {
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1496,
                      "name": "ratioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "4416:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1497,
                      "name": "_newRatioEthToSilver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "4435:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4416:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1499,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:39:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1501,
                        "name": "_newRatioEthToGold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1485,
                        "src": "4489:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1502,
                        "name": "_newRatioEthToSilver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1487,
                        "src": "4509:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1500,
                      "name": "TokenRatioChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "4471:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1504,
                  "nodeType": "EmitStatement",
                  "src": "4466:64:9"
                }
              ]
            },
            "documentation": {
              "id": 1483,
              "nodeType": "StructuredDocumentation",
              "src": "4000:231:9",
              "text": " @dev External function to set token ratios. This function can be called by only owner.\n @param _newRatioEthToGold New Eth to gold token ratio\n @param _newRatioEthToSilver New Eth to silver token ratio"
            },
            "functionSelector": "86956e23",
            "id": 1506,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "4351:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4351:9:9"
              }
            ],
            "name": "changeTokenRatio",
            "nameLocation": "4245:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "_newRatioEthToGold",
                  "nameLocation": "4279:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "4271:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4271:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "_newRatioEthToSilver",
                  "nameLocation": "4315:20:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "4307:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4307:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4261:80:9"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4361:0:9"
            },
            "scope": 1511,
            "src": "4236:301:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "4570:2:9",
              "statements": []
            },
            "id": 1510,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4550:2:9"
            },
            "returnParameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4570:0:9"
            },
            "scope": 1511,
            "src": "4543:29:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1512,
        "src": "226:4348:9",
        "usedErrors": []
      }
    ],
    "src": "32:4543:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-10T12:17:32.456Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "changeTokenRatio(uint256,uint256)": {
        "details": "External function to set token ratios. This function can be called by only owner.",
        "params": {
          "_newRatioEthToGold": "New Eth to gold token ratio",
          "_newRatioEthToSilver": "New Eth to silver token ratio"
        }
      },
      "constructor": {
        "details": "Constructor function",
        "params": {
          "_Gold": "Interface of Gold token",
          "_Silver": "Interface of Silver token",
          "_ratioEthToGold": "Ratio between ETH and Gold",
          "_ratioEthToSilver": "Ratio between ETH and Silver"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swapEthFor(bytes32,uint256)": {
        "details": "Payable function to swap ETH to token",
        "params": {
          "_amount": "Token amount",
          "_type": "Token type which should be swapped"
        }
      },
      "swapTokenFor(bytes32,uint256)": {
        "details": "External function to swap token to ETH and token to token",
        "params": {
          "_amount": "Token Amount",
          "_type": "Token type which should be swapped"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "EthToTokenSwapped(bytes32,uint256)": {
        "notice": "Event emitted when ETH to token swap finished."
      },
      "SwapDeployed()": {
        "notice": "Event emitted only on construction."
      },
      "TokenRatioChanged(uint256,uint256)": {
        "notice": "Event emitted when ETH to token ratio changed."
      },
      "TokenToEthAndTokenToTokenSwapped(bytes32,uint256)": {
        "notice": "Event emitted when token to token or token to ETH swap finished."
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}